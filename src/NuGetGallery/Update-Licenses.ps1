# Copyright (c) .NET Foundation. All rights reserved.
# Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

# This script retrieves the SPDX approved license list from their Github repo (https://github.com/spdx/license-list-data)
# and generates the list of accepted licenses

function Get-StringSetDeclaration($VariableName, $ListItems)
{
    "        public static HashSet<string> $VariableName => new HashSet<string> {"
    if ($null -ne $ListItems)
    {
        $ListItems | ForEach-Object {"$(" " * 4 * 3)`"$_`","}
    }
    "        };"
}

function Get-StandardLicensesList($LicenseIds)
{
    Get-StringSetDeclaration -VariableName "StandardLicenses" -ListItems $LicenseIds
}

function Get-DeprecatedLicensesList($DeprecatedLicenseIds)
{
    Get-StringSetDeclaration -VariableName "DeprecatedLicenses" -ListItems $DeprecatedLicenseIds
}

function Get-StandardExceptionsList($ExceptionsIds)
{
    Get-StringSetDeclaration -VariableName "StandardExceptions" -ListItems $ExceptionsIds
}

function Get-DeprecatedExceptionsList($DeprecatedExceptionsIds)
{
    Get-StringSetDeclaration -VariableName "DeprecatedExceptions" -ListItems $DeprecatedExceptionsIds
}

function Get-LicenseHelperFileContent($LicenseIds, $DeprecatedLicenseIds, $ExceptionsIds, $DeprecatedExceptionIds)
{
    "// This file is generated by Update-Licenses.ps1. Please consider updating and running it instead of updating this file."
    ""
    "namespace NuGetGallery"
    "{"
    "    using System.Collections.Generic;"
    ""
    "    public static class LicenseHelper"
    "    {"
    Get-StandardLicensesList $LicenseIds
    ""
    Get-DeprecatedLicensesList $DeprecatedLicenseIds
    ""
    Get-StandardExceptionsList $ExceptionsIds
    # "" # There are no deprecated exceptions presently, so we'll skip generation for now
    # Get-DeprecatedExceptionsList $DeprecatedExceptionIds
    ""
    "        public const string Unlicensed = `"UNLICENSED`";"
    ""
    "        public const string DeprecationUrl = `"https://aka.ms/deprecateLicenseUrl`";"
    "    }"
    "}"
}

$licenseResponseData = Invoke-RestMethod "https://raw.githubusercontent.com/spdx/license-list-data/master/json/licenses.json"
$licesnseIds = $licenseResponseData.licenses | Where-Object {-not $_.isDeprecatedLicenseId} | Select-Object -ExpandProperty licenseId | Sort-Object
$deprecatedLicenseIds = $licenseResponseData.licenses | Where-Object {($_.isDeprecatedLicenseId)} | Select-Object -ExpandProperty licenseId | Sort-Object

# expression analyzer is a bit sensitive for unknown license exceptions, so we'll use specific source until client gets support.
# $exceptionResponseData = Invoke-RestMethod "https://raw.githubusercontent.com/spdx/license-list-data/master/json/exceptions.json"
$exceptionResponseData = Invoke-RestMethod "https://raw.githubusercontent.com/spdx/license-list-data/45d10da0366f5fa931f60f3931fd23d5fb708de5/json/exceptions.json"
$exceptionIds = $exceptionResponseData.exceptions | Where-Object {-not $_.isDeprecatedLicenseId} | Select-Object -ExpandProperty licenseExceptionId | Sort-Object
$deprecatedExceptionIds = $exceptionResponseData.exceptions | Where-Object {$_.isDeprecatedLicenseId} | Select-Object -ExpandProperty licenseExceptionId | Sort-Object

Get-LicenseHelperFileContent `
    -LicenseIds $licesnseIds `
    -DeprecatedLicenseIds $deprecatedLicenseIds `
    -ExceptionsIds $exceptionIds `
    -DeprecatedExceptionIds $deprecatedExceptionIds `
    | Out-File -FilePath "$PSScriptRoot\Helpers\LicenseHelper.cs" -Encoding utf8
